{"version":3,"sources":["components/Contact.js","components/About.js","components/BookCard.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Contact","Col","style","marginLeft","Form","width","textAlign","Row","Control","placeholder","Group","controlId","Label","type","as","rows","Button","variant","Component","About","Jumbotron","target","href","BookCard","props","className","md","Card","Img","height","src","undefined","book","volumeInfo","imageLinks","thumbnail","img","alt","Body","Title","title","Text","authors","empty","categories","size","accessInfo","webReaderLink","Home","srchFunc","e","searchh","elements","srchBar","value","preventDefault","axios","get","then","response","setState","data","console","log","catch","error","setTimeout","window","scrollTo","top","left","behavior","state","Image","flued","onSubmit","this","FormControl","name","items","map","bookss","i","App","Navbar","Brand","Nav","Link","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.461bfd91.chunk.js","sourcesContent":["import {Form, Col, Row, Button} from 'react-bootstrap';\nimport React, { Component } from 'react'\n\nexport default class Contact extends Component {\n    render() {\n        return (\n            <div>\n              <br/>\n              <br/>\n             \n             <br/>\n              <Col style={{marginLeft: '36%'}}>\n                \n     <Form style={{width: '24rem'}}>\n     <h1 style={{textAlign: 'center'}}>Ask US/Feedback</h1>\n     <Row>\n    <Col>\n      <Form.Control placeholder=\"First name\" />\n    </Col>\n    <Col>\n      <Form.Control placeholder=\"Last name\" />\n    </Col>\n  </Row>\n  <Form.Group controlId=\"exampleForm.ControlInput1\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlInput1\">\n    <Form.Label>Phone Number</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"phone number\" />\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Feedback/Questions</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" />\n  </Form.Group>\n</Form>\n<Button style={{marginLeft: '145px'}} variant=\"dark\">Submit</Button>\n</Col>\n            </div>\n        )\n    }\n}\n","import {Jumbotron, Button} from 'react-bootstrap';\nimport React, { Component } from 'react'\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div>\n                <Jumbotron>\n                    <div style={{marginLeft: \"30px\"}} >\n  <h1>Read<b>ME</b></h1>\n  <ul>\n      <li>\n  <p>\n  A React app that works with Google books API to find, list, view book and their information.\n  </p>\n  </li>\n  <li>\n  <p>\n  This React.js App was done as a project in Software Engineering immersive at General Assembly.\n  </p>\n  </li>\n  </ul>\n  <p>\n    <Button style={{marginLeft: \"40px\"}} target=\" \" variant=\"dark\" href=\"https://github.com/adhelaimi/myProject2-1\">GitHub</Button>\n  </p>\n<br/>\n  <h1><b>Developing</b></h1>\n  <ul>\n      <li>\n  <p>\n  Done by <b>ABDULMAJED DHELAIMI</b>, 2019\n  </p>\n  </li>\n  </ul>\n  <p>\n    <Button style={{marginLeft: \"40px\"}} target=\" \" variant=\"primary\" href=\"https://www.linkedin.com/in/adhelaim\">Linkedin</Button>\n  </p>\n  </div>\n</Jumbotron>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport './comp.css'\nimport {Card, Button, Col} from 'react-bootstrap';\n\nconst BookCard = (props) => {\n    return (\n        <div>\n            {/* <img src={props.book.volumeInfo.imageLinks !== undefined && props.book.volumeInfo.imageLinks.thumbnail} alt=\"books\"/> */}\n             {/* ............... */}\n            {/* <h2>{props.book.volumeInfo.title}</h2> */}\n            {/* <img src={props.book.volumeInfo.imageLinks !== undefined ?  props.book.volumeInfo.imageLinks.thumbnail : props.img} alt=\"books\"/> */}\n<br/>\n<div className=\"cardsView\">\n<Col md=\"4\">\n<Card style={{width: '18rem' }}>\n  <Card.Img style={{width: '18rem', height:'18rem'}} variant=\"top\" src={props.book.volumeInfo.imageLinks !== undefined ?  props.book.volumeInfo.imageLinks.thumbnail : props.img} alt=\"books\"/>\n  {/* <Card.Img style={{width: '18rem', height:'18rem'}} variant=\"top\" src={props.book.volumeInfo.imageLinks.thumbnail} alt=\"books\"/> */}\n  <Card.Body>\n    <Card.Title>{props.book.volumeInfo.title}</Card.Title>\n    <Card.Text>\n    Author: {props.book.volumeInfo !== undefined ? props.book.volumeInfo.authors : props.empty}\n    </Card.Text>\n    <Card.Text>\n    Category: {props.book.volumeInfo !== undefined ? props.book.volumeInfo.categories : props.empty}\n    </Card.Text>\n    <Button target=\" \" size=\"sm\" variant=\"dark\" href={props.book.accessInfo.webReaderLink}>Read Book</Button>\n  </Card.Body>\n</Card></Col>\n</div>\n\n\n\n\n        </div>\n    )\n}\n\nexport default BookCard\n\n\n","import '/Users/Adhelaim/SEI/projects/project2/project2/src/App.css';\nimport axios from 'axios'\nimport {Image, Row,FormControl, Form} from 'react-bootstrap';\nimport BookCard from './BookCard'\n// import FooterPage from './FooterPage';\nimport React, { Component } from 'react'\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          data: null,\n        };\n      }\n      srchFunc = (e) => {\n        const searchh = e.target.elements.srchBar.value\n          e.preventDefault()\n    \n            axios.get(`https://www.googleapis.com/books/v1/volumes?q=${searchh}:keyes&key=AIzaSyAaCiGPlCZcM6BcH4laKHqE0OWezL-us7g`)\n            .then(response => {\n              this.setState({data : response})\n              console.log(response)\n            })\n            .catch(error => {\n              console.log(\"Axios Error\")\n            })\n            \n            setTimeout(function (){\n              // window.scrollTo(0,910);\n              window.scrollTo({\n                top: 910,\n                left: -15000,\n                behavior: \"smooth\"\n              })   \n            }, 700)\n            \n        }\n    render() {\n        return (\n            <div>\n        <Image className=\"bgi\" src=\"https://www.qualtrics.com/m/assets/blog/wp-content/uploads/2018/08/shutterstock_1068141515.jpg\"flued />\n        <div className=\"qoute\">\n        <h1><b>  “If you don’t like to read, you haven’t found the right book.”</b></h1>\n        <p>Find it here!</p>\n        </div>\n        \n        <div className=\"searchBAR\">\n       <Form  style={{width: \"400px\", height: \"-100px\"}} onSubmit={this.srchFunc}>\n        <FormControl  className=\"searchInpt\" type=\"text\" name=\"srchBar\" placeholder=\"Search\" />\n       </Form>\n       </div>\n\n\n    <Row style={{marginLeft: \"68px\"}}>\n       {this.state.data !== null && this.state.data.data.items.map((bookss, i)=>{\n          return <BookCard book={bookss} empty={\" \"} img={\"https://icon-library.net/images/no-image-icon/no-image-icon-0.jpg\"}/>\n       })}\n    </Row>\n       \n            </div>\n        )\n    }\n}\n","import './App.css';\nimport Contact from './components/Contact'\nimport About from './components/About'\nimport Home from './components/Home'\nimport {Navbar, Nav} from 'react-bootstrap';\nimport React, { Component } from 'react'\n//Router\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nexport default class App extends Component {\n \n  render() {\n    return (\n      <BrowserRouter> \n      <div>\n         <div>\n        <Navbar variant=\"dark\" className=\"navi\">\n            <Navbar.Brand>ReadME</Navbar.Brand>\n            <Nav>\n                <Nav.Link href=\"/\">Home</Nav.Link>\n            </Nav>\n            <Nav className=\"ml-auto\">\n                <Nav.Link href=\"./About\">About</Nav.Link>\n                <Nav.Link href=\"/Contact\">Contact</Nav.Link>\n         </Nav>\n        </Navbar>\n        </div>\n  \n       <Switch> \n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/Contact\" component={Contact}/>\n        <Route path=\"/About\" component={About}/>\n        </Switch>\n      </div>\n      </BrowserRouter> \n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}